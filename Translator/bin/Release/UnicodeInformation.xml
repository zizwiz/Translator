<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UnicodeInformation</name>
    </assembly>
    <members>
        <member name="T:System.Unicode.BidirectionalClass">
            <summary>Represents possible values for the Bidi_Class unicode property.</summary>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.LeftToRight">
            <summary>Represents the value Left_To_Right.</summary>
            <remarks>Any strong left-to-right character.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.RightToLeft">
            <summary>Represents the value Right_To_Left.</summary>
            <remarks>Any strong right-to-left (non-Arabic-type) character.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.ArabicLetter">
            <summary>Represents the value Arabic_Letter.</summary>
            <remarks>Any strong right-to-left (Arabic-type) character.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.EuropeanNumber">
            <summary>Represents the value European_Number.</summary>
            <remarks>Any ASCII digit or Eastern Arabic-Indic digit.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.EuropeanSeparator">
            <summary>Represents the value European_Separator.</summary>
            <remarks>Plus and minus signs.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.EuropeanTerminator">
            <summary>Represents the value European_Terminator.</summary>
            <remarks>A terminator in a numeric format context, includes currency signs.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.ArabicNumber">
            <summary>Represents the value Arabic_Number.</summary>
            <remarks>Any Arabic-Indic digit.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.CommonSeparator">
            <summary>Represents the value Common_Separator.</summary>
            <remarks>Commas, colons, and slashes.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.NonSpacingMark">
            <summary>Represents the value Nonspacing_Mark.</summary>
            <remarks>Any nonspacing mark.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.BoundaryNeutral">
            <summary>Represents the value Boundary_Neutral.</summary>
            <remarks>Most format characters, control codes, or noncharacters.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.ParagraphSeparator">
            <summary>Represents the value Paragraph_Separator.</summary>
            <remarks>Various newline characters.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.SegmentSeparator">
            <summary>Represents the value Segment_Separator.</summary>
            <remarks>Various segment-related control codes.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.WhiteSpace">
            <summary>Represents the value White_Space.</summary>
            <remarks>Spaces.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.OtherNeutral">
            <summary>Represents the value Other_Neutral.</summary>
            <remarks>Most other symbols and punctuation marks.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.LeftToRightEmbedding">
            <summary>Represents the value Left_To_Right_Embedding.</summary>
            <remarks>U+202A: the LR embedding control.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.LeftToRightOverride">
            <summary>Represents the value Left_To_Right_Override.</summary>
            <remarks>U+202D: the LR override control.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.RightToLeftEmbedding">
            <summary>Represents the value Right_To_Left_Embedding.</summary>
            <remarks>U+202B: the RL embedding control.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.RightToLeftOverride">
            <summary>Represents the value Right_To_Left_Override.</summary>
            <remarks>U+202E: the RL override control.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.PopDirectionalFormat">
            <summary>Represents the value Pop_Directional_Format.</summary>
            <remarks>U+202C: terminates an embedding or override control.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.LeftToRightIsolate">
            <summary>Represents the value Left_To_Right_Isolate.</summary>
            <remarks>U+2066: the LR isolate control.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.RightToLeftIsolate">
            <summary>Represents the value Right_To_Left_Isolate.</summary>
            <remarks>U+2067: the RL isolate control.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.FirstStrongIsolate">
            <summary>Represents the value First_Strong_Isolate.</summary>
            <remarks>U+2068: the first strong isolate control.</remarks>
        </member>
        <member name="F:System.Unicode.BidirectionalClass.PopDirectionalIsolate">
            <summary>Represents the value Pop_Directional_Isolate.</summary>
            <remarks>U+2069: terminates an isolate control.</remarks>
        </member>
        <member name="T:System.Unicode.CanonicalCombiningClass">
            <summary>Represent known values for the Canonical_Combining_Class property.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.NotReordered">
            <summary>Represents the value Not_Reordered.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Overlay">
            <summary>Represents the value Overlay.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Nukta">
            <summary>Represents the value Nukta.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.KanaVoicing">
            <summary>Represents the value Kana_Voicing.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Virama">
            <summary>Represents the value Virama.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc10">
            <summary>Represents the value Ccc10.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc11">
            <summary>Represents the value Ccc11.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc12">
            <summary>Represents the value Ccc12.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc13">
            <summary>Represents the value Ccc13.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc14">
            <summary>Represents the value Ccc14.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc15">
            <summary>Represents the value Ccc15.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc16">
            <summary>Represents the value Ccc16.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc17">
            <summary>Represents the value Ccc17.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc18">
            <summary>Represents the value Ccc18.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc19">
            <summary>Represents the value Ccc19.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc20">
            <summary>Represents the value Ccc20.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc21">
            <summary>Represents the value Ccc21.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc22">
            <summary>Represents the value Ccc22.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc23">
            <summary>Represents the value Ccc23.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc24">
            <summary>Represents the value Ccc24.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc25">
            <summary>Represents the value Ccc25.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc26">
            <summary>Represents the value Ccc26.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc27">
            <summary>Represents the value Ccc27.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc28">
            <summary>Represents the value Ccc28.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc29">
            <summary>Represents the value Ccc29.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc30">
            <summary>Represents the value Ccc30.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc31">
            <summary>Represents the value Ccc31.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc32">
            <summary>Represents the value Ccc32.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc33">
            <summary>Represents the value Ccc33.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc34">
            <summary>Represents the value Ccc34.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc35">
            <summary>Represents the value Ccc35.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc36">
            <summary>Represents the value Ccc36.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc37">
            <summary>Represents the value Ccc37.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc38">
            <summary>Represents the value Ccc38.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc39">
            <summary>Represents the value Ccc39.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc40">
            <summary>Represents the value Ccc40.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc41">
            <summary>Represents the value Ccc41.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc42">
            <summary>Represents the value Ccc42.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc43">
            <summary>Represents the value Ccc43.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc44">
            <summary>Represents the value Ccc44.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc45">
            <summary>Represents the value Ccc45.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc46">
            <summary>Represents the value Ccc46.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc47">
            <summary>Represents the value Ccc47.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc48">
            <summary>Represents the value Ccc48.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc49">
            <summary>Represents the value Ccc49.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc50">
            <summary>Represents the value Ccc50.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc51">
            <summary>Represents the value Ccc51.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc52">
            <summary>Represents the value Ccc52.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc53">
            <summary>Represents the value Ccc53.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc54">
            <summary>Represents the value Ccc54.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc55">
            <summary>Represents the value Ccc55.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc56">
            <summary>Represents the value Ccc56.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc57">
            <summary>Represents the value Ccc57.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc58">
            <summary>Represents the value Ccc58.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc59">
            <summary>Represents the value Ccc59.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc60">
            <summary>Represents the value Ccc60.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc61">
            <summary>Represents the value Ccc61.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc62">
            <summary>Represents the value Ccc62.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc63">
            <summary>Represents the value Ccc63.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc64">
            <summary>Represents the value Ccc64.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc65">
            <summary>Represents the value Ccc65.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc66">
            <summary>Represents the value Ccc66.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc67">
            <summary>Represents the value Ccc67.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc68">
            <summary>Represents the value Ccc68.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc69">
            <summary>Represents the value Ccc69.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc70">
            <summary>Represents the value Ccc70.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc71">
            <summary>Represents the value Ccc71.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc72">
            <summary>Represents the value Ccc72.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc73">
            <summary>Represents the value Ccc73.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc74">
            <summary>Represents the value Ccc74.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc75">
            <summary>Represents the value Ccc75.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc76">
            <summary>Represents the value Ccc76.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc77">
            <summary>Represents the value Ccc77.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc78">
            <summary>Represents the value Ccc78.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc79">
            <summary>Represents the value Ccc79.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc80">
            <summary>Represents the value Ccc80.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc81">
            <summary>Represents the value Ccc81.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc82">
            <summary>Represents the value Ccc82.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc83">
            <summary>Represents the value Ccc83.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc84">
            <summary>Represents the value Ccc84.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc85">
            <summary>Represents the value Ccc85.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc86">
            <summary>Represents the value Ccc86.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc87">
            <summary>Represents the value Ccc87.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc88">
            <summary>Represents the value Ccc88.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc89">
            <summary>Represents the value Ccc89.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc90">
            <summary>Represents the value Ccc90.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc91">
            <summary>Represents the value Ccc91.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc92">
            <summary>Represents the value Ccc92.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc93">
            <summary>Represents the value Ccc93.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc94">
            <summary>Represents the value Ccc94.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc95">
            <summary>Represents the value Ccc95.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc96">
            <summary>Represents the value Ccc96.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc97">
            <summary>Represents the value Ccc97.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc98">
            <summary>Represents the value Ccc98.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc99">
            <summary>Represents the value Ccc99.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc100">
            <summary>Represents the value Ccc100.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc101">
            <summary>Represents the value Ccc101.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc102">
            <summary>Represents the value Ccc102.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc103">
            <summary>Represents the value Ccc103.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc104">
            <summary>Represents the value Ccc104.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc105">
            <summary>Represents the value Ccc105.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc106">
            <summary>Represents the value Ccc106.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc107">
            <summary>Represents the value Ccc107.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc108">
            <summary>Represents the value Ccc108.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc109">
            <summary>Represents the value Ccc109.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc110">
            <summary>Represents the value Ccc110.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc111">
            <summary>Represents the value Ccc111.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc112">
            <summary>Represents the value Ccc112.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc113">
            <summary>Represents the value Ccc113.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc114">
            <summary>Represents the value Ccc114.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc115">
            <summary>Represents the value Ccc115.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc116">
            <summary>Represents the value Ccc116.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc117">
            <summary>Represents the value Ccc117.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc118">
            <summary>Represents the value Ccc118.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc119">
            <summary>Represents the value Ccc119.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc120">
            <summary>Represents the value Ccc120.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc121">
            <summary>Represents the value Ccc121.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc122">
            <summary>Represents the value Ccc122.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc123">
            <summary>Represents the value Ccc123.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc124">
            <summary>Represents the value Ccc124.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc125">
            <summary>Represents the value Ccc125.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc126">
            <summary>Represents the value Ccc126.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc127">
            <summary>Represents the value Ccc127.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc128">
            <summary>Represents the value Ccc128.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc129">
            <summary>Represents the value Ccc129.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc130">
            <summary>Represents the value Ccc130.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc131">
            <summary>Represents the value Ccc131.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc132">
            <summary>Represents the value Ccc132.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc133">
            <summary>Represents the value Ccc133.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc134">
            <summary>Represents the value Ccc134.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc135">
            <summary>Represents the value Ccc135.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc136">
            <summary>Represents the value Ccc136.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc137">
            <summary>Represents the value Ccc137.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc138">
            <summary>Represents the value Ccc138.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc139">
            <summary>Represents the value Ccc139.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc140">
            <summary>Represents the value Ccc140.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc141">
            <summary>Represents the value Ccc141.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc142">
            <summary>Represents the value Ccc142.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc143">
            <summary>Represents the value Ccc143.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc144">
            <summary>Represents the value Ccc144.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc145">
            <summary>Represents the value Ccc145.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc146">
            <summary>Represents the value Ccc146.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc147">
            <summary>Represents the value Ccc147.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc148">
            <summary>Represents the value Ccc148.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc149">
            <summary>Represents the value Ccc149.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc150">
            <summary>Represents the value Ccc150.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc151">
            <summary>Represents the value Ccc151.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc152">
            <summary>Represents the value Ccc152.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc153">
            <summary>Represents the value Ccc153.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc154">
            <summary>Represents the value Ccc154.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc155">
            <summary>Represents the value Ccc155.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc156">
            <summary>Represents the value Ccc156.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc157">
            <summary>Represents the value Ccc157.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc158">
            <summary>Represents the value Ccc158.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc159">
            <summary>Represents the value Ccc159.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc160">
            <summary>Represents the value Ccc160.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc161">
            <summary>Represents the value Ccc161.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc162">
            <summary>Represents the value Ccc162.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc163">
            <summary>Represents the value Ccc163.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc164">
            <summary>Represents the value Ccc164.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc165">
            <summary>Represents the value Ccc165.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc166">
            <summary>Represents the value Ccc166.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc167">
            <summary>Represents the value Ccc167.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc168">
            <summary>Represents the value Ccc168.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc169">
            <summary>Represents the value Ccc169.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc170">
            <summary>Represents the value Ccc170.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc171">
            <summary>Represents the value Ccc171.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc172">
            <summary>Represents the value Ccc172.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc173">
            <summary>Represents the value Ccc173.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc174">
            <summary>Represents the value Ccc174.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc175">
            <summary>Represents the value Ccc175.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc176">
            <summary>Represents the value Ccc176.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc177">
            <summary>Represents the value Ccc177.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc178">
            <summary>Represents the value Ccc178.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc179">
            <summary>Represents the value Ccc179.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc180">
            <summary>Represents the value Ccc180.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc181">
            <summary>Represents the value Ccc181.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc182">
            <summary>Represents the value Ccc182.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc183">
            <summary>Represents the value Ccc183.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc184">
            <summary>Represents the value Ccc184.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc185">
            <summary>Represents the value Ccc185.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc186">
            <summary>Represents the value Ccc186.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc187">
            <summary>Represents the value Ccc187.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc188">
            <summary>Represents the value Ccc188.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc189">
            <summary>Represents the value Ccc189.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc190">
            <summary>Represents the value Ccc190.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc191">
            <summary>Represents the value Ccc191.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc192">
            <summary>Represents the value Ccc192.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc193">
            <summary>Represents the value Ccc193.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc194">
            <summary>Represents the value Ccc194.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc195">
            <summary>Represents the value Ccc195.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc196">
            <summary>Represents the value Ccc196.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc197">
            <summary>Represents the value Ccc197.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc198">
            <summary>Represents the value Ccc198.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Ccc199">
            <summary>Represents the value Ccc199.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.AttachedBelowLeft">
            <summary>Represents the value Attached_Below_Left.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.AttachedBelow">
            <summary>Represents the value Attached_Below.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.AttachedBelowRight">
            <summary>Represents the value Attached_Below_Right.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.AttachedLeft">
            <summary>Represents the value Attached_Left.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.AttachedRight">
            <summary>Represents the value Attached_Right.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.AttachedAboveLeft">
            <summary>Represents the value Attached_Above_Left.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.AttachedAbove">
            <summary>Represents the value Attached_Above.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.AttachedAboveRight">
            <summary>Represents the value Attached_Above_Right.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.BelowLeft">
            <summary>Represents the value Below_Left.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Below">
            <summary>Represents the value Below.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.BelowRight">
            <summary>Represents the value Below_Right.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Left">
            <summary>Represents the value Left.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Right">
            <summary>Represents the value Right.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.AboveLeft">
            <summary>Represents the value Above_Left.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.Above">
            <summary>Represents the value Above.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.AboveRight">
            <summary>Represents the value Above_Right.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.DoubleBelow">
            <summary>Represents the value Double_Below.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.DoubleAbove">
            <summary>Represents the value Double_Above.</summary>
        </member>
        <member name="F:System.Unicode.CanonicalCombiningClass.IotaSubscript">
            <summary>Represents the value Iota_Subscript.</summary>
        </member>
        <member name="T:System.Unicode.CjkRadicalInfo">
            <summary>Provides information on a specific CJK radical.</summary>
        </member>
        <member name="P:System.Unicode.CjkRadicalInfo.RadicalIndex">
            <summary>The index of the radical in the Kangxi dictionary.</summary>
            <remarks>There are 214 radicals, numbered from 1 to 214.</remarks>
        </member>
        <member name="P:System.Unicode.CjkRadicalInfo.TraditionalRadicalCodePoint">
            <summary>Gets a code point representing the CJK radical in its traditional form.</summary>
        </member>
        <member name="P:System.Unicode.CjkRadicalInfo.TraditionalCharacterCodePoint">
            <summary>Gets the code point of a traditional character composed only of the CJK radical.</summary>
            <remarks>
            Usually, the glyph of this code point will be the same as the one used for <see cref="P:System.Unicode.CjkRadicalInfo.TraditionalRadicalCodePoint"/>.
            However, the code point returned will have a meaning associated, contrary to the one returned by <see cref="P:System.Unicode.CjkRadicalInfo.TraditionalRadicalCodePoint"/>, which only represents the radical.
            </remarks>
        </member>
        <member name="P:System.Unicode.CjkRadicalInfo.SimplifiedRadicalCodePoint">
            <summary>Gets a code point representing the CJK radical in its simplified form, which may be the same as the traditional form.</summary>
            <remarks>Most of the time, the value returned will be the same as <see cref="P:System.Unicode.CjkRadicalInfo.TraditionalRadicalCodePoint"/>.</remarks>
        </member>
        <member name="P:System.Unicode.CjkRadicalInfo.SimplifiedCharacterCodePoint">
            <summary>Gets the code point of a simplified character composed only of the CJK radical.</summary>
            <remarks>
            Usually, the glyph of this code point will be the same as the one used for <see cref="P:System.Unicode.CjkRadicalInfo.SimplifiedRadicalCodePoint"/>.
            However, the code point returned will have a meaning associated, contrary to the one returned by <see cref="P:System.Unicode.CjkRadicalInfo.SimplifiedRadicalCodePoint"/>, which only represents the radical.
            </remarks>
        </member>
        <member name="P:System.Unicode.CjkRadicalInfo.HasSimplifiedForm">
            <summary>Gets a value indicating whether a simplified form exists for the given radical.</summary>
        </member>
        <member name="T:System.Unicode.CodePointEnumerable">
            <summary>Allows enumeration of the code points contained in an encapsulated string.</summary>
            <remarks>
            This enumerable will only allow enumeration of valid UTF-16 strings.
            For incomplete or invalid UTF-16 strings, please use <see cref="T:System.Unicode.PermissiveCodePointEnumerable"/> instead.
            </remarks>
        </member>
        <member name="M:System.Unicode.CodePointEnumerable.#ctor(System.String)">
            <summary>Initializes a new instance of the struct <see cref="T:System.Unicode.CodePointEnumerable"/>.</summary>
            <param name="text">The string whose code points must be enumerated.</param>
        </member>
        <member name="P:System.Unicode.CodePointEnumerable.Text">
            <summary>Gets the text whose code points are being enumerated.</summary>
        </member>
        <member name="M:System.Unicode.CodePointEnumerable.GetEnumerator">
            <summary>Gets an enumerator which can be used to enumerate the code points in the text.</summary>
        </member>
        <member name="T:System.Unicode.CodePointEnumerator">
            <summary>Supports a standard iteration of code points in a <see cref="T:System.String"/>.</summary>
        </member>
        <member name="M:System.Unicode.CodePointEnumerator.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Unicode.PermissiveCodePointEnumerator"/> struct.</summary>
            <param name="text">The text whose code point should be enumerated.</param>
            <exception cref="T:System.ArgumentNullException"><paramref cref="F:System.Unicode.CodePointEnumerator._text"/> is <see langword="null"/>.</exception>
        </member>
        <member name="P:System.Unicode.CodePointEnumerator.Current">
            <summary>Gets the element in the collection at the current position of the enumerator..</summary>
            <value>The element in the collection at the current position of the enumerator.</value>
        </member>
        <member name="M:System.Unicode.CodePointEnumerator.MoveNext">
            <summary>Advances the enumerator to the next element of the collection.</summary>
            <returns><see langword="true"/> if the enumerator was successfully advanced to the next element; <see langword="false"/> if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="T:System.Unicode.CompatibilityFormattingTag">
            <summary>Provides information on the kind of compatibility decomposition provided.</summary>
            <remarks>The default value of <see cref="F:System.Unicode.CompatibilityFormattingTag.Canonical"/> indicates canonical decomposition of the code point.</remarks>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.Canonical">
            <summary>Canonical form.</summary>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.Font">
            <summary>Font variant (for example, a blackletter form).</summary>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.NoBreak">
            <summary>No-break version of a space or hyphen.</summary>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.Initial">
            <summary>Initial presentation form (Arabic).</summary>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.Medial">
            <summary>Medial presentation form (Arabic).</summary>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.Final">
            <summary>Final presentation form (Arabic).</summary>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.Isolated">
            <summary>Isolated presentation form (Arabic).</summary>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.Circle">
            <summary>Encircled form.</summary>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.Super">
            <summary>Superscript form.</summary>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.Sub">
            <summary>Subscript form.</summary>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.Vertical">
            <summary>Vertical layout presentation form.</summary>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.Wide">
            <summary>Wide (or zenkaku) compatibility character.</summary>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.Narrow">
            <summary>Narrow (or hankaku) compatibility character.</summary>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.Small">
            <summary>Small variant form (CNS compatibility).</summary>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.Square">
            <summary>CJK squared font variant.</summary>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.Fraction">
            <summary>Vulgar fraction form.</summary>
        </member>
        <member name="F:System.Unicode.CompatibilityFormattingTag.Compat">
            <summary>Otherwise unspecified compatibility character.</summary>
        </member>
        <member name="T:System.Unicode.ContributoryProperties">
            <summary>A bitmask of the various available contributory properties.</summary>
            <remarks>As per the standard, contributory properties are neither normative nor informative, but are used to derive <see cref="T:System.Unicode.ContributoryProperties"/>.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.AsciiHexDigit">
            <summary>Represents the ASCII_Hex_Digit property.</summary>
            <remarks>ASCII characters commonly used for the representation of hexadecimal numbers.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.BidiControl">
            <summary>Represents the Bidi_Control property.</summary>
            <remarks>Format control characters which have specific functions in the Unicode Bidirectional Algorithm [UAX9].</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.Dash">
            <summary>Represents the Dash property.</summary>
            <remarks>Punctuation characters explicitly called out as dashes in the Unicode Standard, plus their compatibility equivalents. Most of these have the General_Category value Pd, but some have the General_Category value Sm because of their use in mathematics.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.Deprecated">
            <summary>Represents the Deprecated property.</summary>
            <remarks>For a machine-readable list of deprecated characters. No characters will ever be removed from the standard, but the usage of deprecated characters is strongly discouraged.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.Diacritic">
            <summary>Represents the Diacritic property.</summary>
            <remarks>Characters that linguistically modify the meaning of another character to which they apply. Some diacritics are not combining characters, and some combining characters are not diacritics.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.Extender">
            <summary>Represents the Extender property.</summary>
            <remarks>Characters whose principal function is to extend the value or shape of a preceding alphabetic character. Typical of these are length and iteration marks.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.HexDigit">
            <summary>Represents the Hex_Digit property.</summary>
            <remarks>Characters commonly used for the representation of hexadecimal numbers, plus their compatibility equivalents.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.Hyphen">
            <summary>Represents the Hyphen property.</summary>
            <remarks>Dashes which are used to mark connections between pieces of words, plus the Katakana middle dot. The Katakana middle dotfunctions like a hyphen, but is shaped like a dot rather than a dash.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.Ideographic">
            <summary>Represents the Ideographic property.</summary>
            <remarks>Characters considered to be CJKV (Chinese, Japanese, Korean, and Vietnamese) ideographs. This property roughly defines the class of "Chinese characters" and does not include characters of other logographic scripts such as Cuneiform or Egyptian Hieroglyphs.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.IdsBinaryOperator">
            <summary>Represents the IDS_Binary_Operator property.</summary>
            <remarks>Used in Ideographic Description Sequences.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.IdsTrinaryOperator">
            <summary>Represents the IDS_Trinary_Operator property.</summary>
            <remarks>Used in Ideographic Description Sequences.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.JoinControl">
            <summary>Represents the Join_Control property.</summary>
            <remarks>Format control characters which have specific functions for control of cursive joining and ligation.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.LogicalOrderException">
            <summary>Represents the Logical_Order_Exception property.</summary>
            <remarks>A small number of spacing vowel letters occurring in certain Southeast Asian scripts such as Thai and Lao, which use a visual order display model. These letters are stored in text ahead of syllable-initial consonants, and require special handling for processes such as searching and sorting.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.NonCharacterCodePoint">
            <summary>Represents the Noncharacter_Code_Point property.</summary>
            <remarks>Code points permanently reserved for internal use.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.OtherAlphabetic">
            <summary>Represents the Other_Alphabetic property.</summary>
            <remarks>Used in deriving the Alphabetic property.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.OtherDefaultIgnorableCodePoint">
            <summary>Represents the Other_Default_Ignorable_Code_Point property.</summary>
            <remarks>Used in deriving the Default_Ignorable_Code_Point property.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.OtherGraphemeExtend">
            <summary>Represents the Other_Grapheme_Extend property.</summary>
            <remarks>Used in deriving  the Grapheme_Extend property.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.OtherIdContinue">
            <summary>Represents the Other_ID_Continue property.</summary>
            <remarks>Used to maintain backward compatibility of ID_Continue.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.OtherIdStart">
            <summary>Represents the Other_ID_Start property.</summary>
            <remarks>Used to maintain backward compatibility of ID_Start.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.OtherLowercase">
            <summary>Represents the Other_Lowercase property.</summary>
            <remarks>Used in deriving the Lowercase property.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.OtherMath">
            <summary>Represents the Other_Math property.</summary>
            <remarks>Used in deriving the Math property.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.OtherUppercase">
            <summary>Represents the Other_Uppercase property.</summary>
            <remarks>Used in deriving the Uppercase property.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.PatternSyntax">
            <summary>Represents the Pattern_Syntax property.</summary>
            <remarks>Used for pattern syntax as described in Unicode Standard Annex #31, "Unicode Identifier and Pattern Syntax" [UAX31].</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.PatternWhiteSpace">
            <summary>Represents the Pattern_White_Space property.</summary>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.QuotationMark">
            <summary>Represents the Quotation_Mark property.</summary>
            <remarks>Punctuation characters that function as quotation marks.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.Radical">
            <summary>Represents the Radical property.</summary>
            <remarks>Used in Ideographic Description Sequences.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.SoftDotted">
            <summary>Represents the Soft_Dotted property.</summary>
            <remarks>Characters with a "soft dot", like i or j. An accent placed on these characters causes the dot to disappear. An explicit dot abovecan be added where required, such as in Lithuanian.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.SequenceTerminal">
            <summary>Represents the STerm property.</summary>
            <remarks>Sentence Terminal. Used in Unicode Standard Annex #29, "Unicode Text Segmentation" [UAX29].</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.TerminalPunctuation">
            <summary>Represents the Terminal_Punctuation property.</summary>
            <remarks>Punctuation characters that generally mark the end of textual units.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.UnifiedIdeograph">
            <summary>Represents the Unified_Ideograph property.</summary>
            <remarks>A property which specifies the exact set of Unified CJK Ideographs in the standard. This set excludes CJK Compatibility Ideographs (which have canonical decompositions to Unified CJK Ideographs), as well as characters from the CJK Symbols and Punctuation block. The property is used in the definition of Ideographic Description Sequences.</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.VariationSelector">
            <summary>Represents the Variation_Selector property.</summary>
            <remarks>Indicates characters that are Variation Selectors. For details on the behavior of these characters, seeStandardizedVariants.html, Section 23.4, Variation Selectors in [Unicode], and Unicode Technical Standard #37, "Unicode Ideographic Variation Database" [UTS37].</remarks>
        </member>
        <member name="F:System.Unicode.ContributoryProperties.WhiteSpace">
            <summary>Represents the White_Space property.</summary>
            <remarks>Spaces, separator characters and other control characters which should be treated by programming languages as "white space" for the purpose of parsing elements. See also Line_Break, Grapheme_Cluster_Break, Sentence_Break, and Word_Break, which classify space characters and related controls somewhat differently for particular text segmentation contexts.</remarks>
        </member>
        <member name="T:System.Unicode.CoreProperties">
            <summary>A bitmask of the various available core properties.</summary>
            <remarks>Core properties are normative, and derived from various properties as well as <see cref="T:System.Unicode.ContributoryProperties"/>.</remarks>
        </member>
        <member name="F:System.Unicode.CoreProperties.Lowercase">
            <summary>Represents the Lowercase property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.Uppercase">
            <summary>Represents the Uppercase property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.Cased">
            <summary>Represents the Cased property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.CaseIgnorable">
            <summary>Represents the Case_Ignorable property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.ChangesWhenLowercased">
            <summary>Represents the Changes_When_Lowercased property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.ChangesWhenUppercased">
            <summary>Represents the Changes_When_Uppercased property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.ChangesWhenTitlecased">
            <summary>Represents the Changes_When_Titlecased property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.ChangesWhenCasefolded">
            <summary>Represents the Changes_When_Casefolded property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.ChangesWhenCasemapped">
            <summary>Represents the Changes_When_Casemapped property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.Alphabetic">
            <summary>Represents the Alphabetic property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.DefaultIgnorableCodePoint">
            <summary>Represents the Default_Ignorable_Code_Point property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.GraphemeBase">
            <summary>Represents the Grapheme_Base property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.GraphemeExtend">
            <summary>Represents the Grapheme_Extend property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.GraphemeLink">
            <summary>Represents the Grapheme_Link property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.Math">
            <summary>Represents the Math property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.IdentifierStart">
            <summary>Represents the ID_Start property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.IdentifierContinue">
            <summary>Represents the ID_Continue property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.ExtendedIdentifierStart">
            <summary>Represents the XID_Start property.</summary>
        </member>
        <member name="F:System.Unicode.CoreProperties.ExtendedIdentifierContinue">
            <summary>Represents the XID_Continue property.</summary>
        </member>
        <member name="T:System.Unicode.EmojiProperties">
            <summary>A bitmask of the various available emoji properties.</summary>
            <remarks>Emoji properties are not formally part of UCD, but .</remarks>
        </member>
        <member name="F:System.Unicode.EmojiProperties.Emoji">
            <summary>Represents the Emoji property.</summary>
        </member>
        <member name="F:System.Unicode.EmojiProperties.EmojiPresentation">
            <summary>Represents the Emoji_Presentation property.</summary>
        </member>
        <member name="F:System.Unicode.EmojiProperties.EmojiModifier">
            <summary>Represents the Emoji_Modifier property.</summary>
        </member>
        <member name="F:System.Unicode.EmojiProperties.EmojiModifierBase">
            <summary>Represents the Emoji_Modifier_Base property.</summary>
        </member>
        <member name="F:System.Unicode.EmojiProperties.EmojiComponent">
            <summary>Represents the Emoji_Component property.</summary>
        </member>
        <member name="F:System.Unicode.EmojiProperties.ExtendedPictographic">
            <summary>Represents the Extended_Pictographic property.</summary>
        </member>
        <member name="T:System.Unicode.PermissiveCodePointEnumerable">
            <summary>Allows enumeration of the code points contained in an encapsulated string, even when this one contains lone surrogates.</summary>
            <remarks>
            This enumerable will allow enumeration of UTF-16 strings containing lone surrogates.
            For a more conformant enumeration of code points, please use <see cref="T:System.Unicode.CodePointEnumerable"/> instead.
            </remarks>
        </member>
        <member name="M:System.Unicode.PermissiveCodePointEnumerable.#ctor(System.String)">
            <summary>Initializes a new instance of the struct <see cref="T:System.Unicode.PermissiveCodePointEnumerable"/>.</summary>
            <param name="text">The string whose code points must be enumerated.</param>
        </member>
        <member name="P:System.Unicode.PermissiveCodePointEnumerable.Text">
            <summary>Gets the text whose code points are being enumerated.</summary>
        </member>
        <member name="M:System.Unicode.PermissiveCodePointEnumerable.GetEnumerator">
            <summary>Gets an enumerator which can be used to enumerate the code points in the text.</summary>
            <returns></returns>
        </member>
        <member name="T:System.Unicode.PermissiveCodePointEnumerator">
            <summary>Supports a permissive iteration of code points in a <see cref="T:System.String"/>.</summary>
        </member>
        <member name="M:System.Unicode.PermissiveCodePointEnumerator.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Unicode.PermissiveCodePointEnumerator"/> struct.</summary>
            <param name="text">The text whose code point should be enumerated.</param>
            <exception cref="T:System.ArgumentNullException"><paramref cref="F:System.Unicode.PermissiveCodePointEnumerator._text"/> is <see langword="null"/>.</exception>
        </member>
        <member name="P:System.Unicode.PermissiveCodePointEnumerator.Current">
            <summary>Gets the element in the collection at the current position of the enumerator..</summary>
            <value>The element in the collection at the current position of the enumerator.</value>
        </member>
        <member name="M:System.Unicode.PermissiveCodePointEnumerator.MoveNext">
            <summary>Advances the enumerator to the next element of the collection.</summary>
            <returns><see langword="true"/> if the enumerator was successfully advanced to the next element; <see langword="false"/> if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="T:System.Unicode.StringExtensions">
            <summary>Contains extension methods applicable to the <see cref="T:System.String"/> type.</summary>
        </member>
        <member name="M:System.Unicode.StringExtensions.AsCodePointEnumerable(System.String)">
            <summary>Encapsulates the string in an object which can be used to enumerate code points.</summary>
            <remarks>
            The enumerable returned by this method enumerates code points in a strict manner.
            If the string contains lone surrogates, the enumeration will throw.
            </remarks>
            <param name="s">The string to encapsulate.</param>
            <returns>An enumerable object, which can be used to enumerate code points in the string.</returns>
        </member>
        <member name="M:System.Unicode.StringExtensions.AsPermissiveCodePointEnumerable(System.String)">
            <summary>Encapsulates the string in an object which can be used to enumerate code points in a permissive way.</summary>
            <remarks>
            The enumerable returned by this method is permissive, regarding the code points represented.
            It allows invalid sequences, such as lone surrogates, the enumeration will handle those gracefully.
            </remarks>
            <param name="s">The string to encapsulate.</param>
            <returns>An enumerable object, which can be used to enumerate code points in the string.</returns>
        </member>
        <member name="T:System.Unicode.UcdFields">
            <summary>Represents the fields available for an UCD entry.</summary>
            <remarks>Not all the enumeration member directly map to a field.</remarks>
        </member>
        <member name="T:System.Unicode.UnicodeBlock">
            <summary>Represents a Unicode block.</summary>
        </member>
        <member name="F:System.Unicode.UnicodeBlock.CodePointRange">
            <summary>The code point range of this block.</summary>
        </member>
        <member name="F:System.Unicode.UnicodeBlock.Name">
            <summary>The name of this block.</summary>
        </member>
        <member name="T:System.Unicode.UnicodeCategoryExtensions">
            <summary>Provides extensions to the <see cref="T:System.Globalization.UnicodeCategory"/> type.</summary>
        </member>
        <member name="M:System.Unicode.UnicodeCategoryExtensions.GetShortName(System.Globalization.UnicodeCategory)">
            <summary>Gets the short name of the unicode category.</summary>
            <param name="category">The category whose short name should be retrieved.</param>
            <returns>The short name of the unicode category.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeCategoryExtensions.GetLongName(System.Globalization.UnicodeCategory)">
            <summary>Gets the long name of the unicode category.</summary>
            <param name="category">The category whose long name should be retrieved.</param>
            <returns>The long name of the unicode category.</returns>
        </member>
        <member name="T:System.Unicode.UnicodeCategoryInfo">
            <summary>Provides complementary information on <see cref="T:System.Globalization.UnicodeCategory"/> values.</summary>
        </member>
        <member name="M:System.Unicode.UnicodeCategoryInfo.Get(System.Globalization.UnicodeCategory)">
            <summary>Gets an <see cref="T:System.Unicode.UnicodeCategoryInfo"/> value providing information on the specified unicode category.</summary>
            <param name="category">The category on which information should be retrieved.</param>
            <returns>Information on the specified category.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeCategoryInfo.FromShortName(System.String)">
            <summary>Gets an <see cref="T:System.Unicode.UnicodeCategoryInfo"/> value providing information on the unicode category, accessed by its short name, as per the Unicode standard.</summary>
            <param name="name">The short name for which information should be retrieved .</param>
            <returns>Information on the specified category.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeCategoryInfo.FromLongName(System.String)">
            <summary>Gets an <see cref="T:System.Unicode.UnicodeCategoryInfo"/> value providing information on the unicode category, accessed by its long name, as per the Unicode standard.</summary>
            <param name="name">The long name for which information should be retrieved .</param>
            <returns>Information on the specified category.</returns>
        </member>
        <member name="F:System.Unicode.UnicodeCategoryInfo.Category">
            <summary>The unicode category described.</summary>
        </member>
        <member name="F:System.Unicode.UnicodeCategoryInfo.ShortName">
            <summary>Short name of the category, as per the Unicode standard.</summary>
        </member>
        <member name="F:System.Unicode.UnicodeCategoryInfo.LongName">
            <summary>Long name of the category, as per the Unicode standard.</summary>
        </member>
        <member name="M:System.Unicode.UnicodeCategoryInfo.ToString">
            <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeCategoryInfo.Equals(System.Object)">
            <summary>Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.</summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns><see langword="true" /> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeCategoryInfo.Equals(System.Unicode.UnicodeCategoryInfo)">
            <summary>Indicates whether the current object is equal to another object of the same type.</summary>
            <param name="other">An object to compare with this object.</param>
            <returns><see langword="true" /> if the current object is equal to the other parameter; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeCategoryInfo.GetHashCode">
            <summary>Returns a hash code for this instance.</summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeCategoryInfo.op_Implicit(System.Unicode.UnicodeCategoryInfo)~System.Globalization.UnicodeCategory">
            <summary>Performs an implicit conversion from <see cref="T:System.Unicode.UnicodeCategoryInfo"/> to <see cref="T:System.Globalization.UnicodeCategory"/>.</summary>
            <param name="info">The information.</param>
            <returns>The result of the conversion.</returns>
        </member>
        <member name="T:System.Unicode.UnicodeCharInfo">
            <summary>Provides information on a specific unicode code point.</summary>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.CodePoint">
            <summary>Gets the code point as an UTF-32 value.</summary>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.Name">
            <summary>Gets the code point name.</summary>
            <remarks>This is the Name Unicode property.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.NameAliases">
            <summary>Gets the name aliases defined for the code point.</summary>
            <remarks>This is the Name_Alias Unicode property.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.Category">
            <summary>Gets the category defined for the code point.</summary>
            <remarks>This is the General_Category Unicode property.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.Block">
            <summary>Gets the name of the block where the code point is located.</summary>
            <remarks>This is the Block Unicode property.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.CanonicalCombiningClass">
            <summary>Gets the canonical combining class defined for the code point.</summary>
            <remarks>This is the Canonical_Combining_Class Unicode property.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.BidirectionalClass">
            <summary>Gets the bidirectional class defined for the code point.</summary>
            <remarks>This is the Bidi_Class Unicode property.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.DecompositionType">
            <summary>Gets the decomposition type defined for the code point.</summary>
            <remarks>This is the Decomposition_Type Unicode property.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.DecompositionMapping">
            <summary>Gets the decomposition mapping defined for the code point.</summary>
            <remarks>This is the Decomposition_Mapping Unicode property.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.NumericType">
            <summary>Gets the numeric type defined for the code point.</summary>
            <remarks>
            This is the Numeric_Type Unicode property.
            When this value is defined to something other than <see cref="F:System.Unicode.UnicodeNumericType.None"/>, the <see cref="P:System.Unicode.UnicodeCharInfo.NumericValue"/> indicates the numeric value of the code point.
            The value of this property may be influenced by Unihan data, which will set it to <see cref="F:System.Unicode.UnicodeNumericType.Numeric"/>.
            In this case, the property <see cref="P:System.Unicode.UnicodeCharInfo.UnihanNumericType"/> will indicate the origin of the numeric value in Unihan data.
            </remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.UnihanNumericType">
            <summary>Gets the Unihan numeric type defined for the code point.</summary>
            <remarks>The value of this property indicates which of the kPrimaryNumeric, kAccountingNumeric, or kOtherNumeric Unihan property is set, if any.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.NumericValue">
            <summary>Gets the numeric value defined for the code point.</summary>
            <remarks>
            This is the Numeric_Value Unicode property.
            This value may come from Unihan data.
            When this property set, the <see cref="P:System.Unicode.UnicodeCharInfo.NumericType"/> and <see cref="P:System.Unicode.UnicodeCharInfo.UnihanNumericType"/> indicates the nature of the numeric value.
            </remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.BidirectionalMirrored">
            <summary>Gets a value indicating whether the character is mirrored in bidirectional text.</summary>
            <remarks>This is the Bidi_Mirrored Unicode property.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.OldName">
            <summary>Gets the Unicode 1 name of the code point.</summary>
            <remarks>This is the Unicode_1_Name Unicode property.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.SimpleUpperCaseMapping">
            <summary>Gets the simple uppercase mapping defined for the code point.</summary>
            <remarks>This is the Simple_Uppercase_Mapping Unicode property.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.SimpleLowerCaseMapping">
            <summary>Gets the simple lowercase mapping defined for the code point.</summary>
            <remarks>This is the Simple_Lowercase_Mapping Unicode property.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.SimpleTitleCaseMapping">
            <summary>Gets the simple titlecase mapping defined for the code point.</summary>
            <remarks>This is the Simple_Titlecase_Mapping Unicode property.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.ContributoryProperties">
            <summary>Gets a value indicating which of the boolean contributory properties are defined for the code point.</summary>
            <remarks>
            The Unicode standard indicates contributory properties as neither normative nor informational.
            However, contributory properties are used by Unicode to define the code properties.
            The corresponding core properties may be accessed from the <see cref="P:System.Unicode.UnicodeCharInfo.CoreProperties"/> member.
            </remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.CoreProperties">
            <summary>Gets a value indicating which of the boolean core properties are defined for the code point.</summary>
            <remarks>The core properties are computed by combining various character information together with contributory properties.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.EmojiProperties">
            <summary>Gets a value indicating which of the boolean emoji properties are defined for the code point.</summary>
            <remarks>The emoji properties are provided by the Unicode Emoji standard, which is not directly part of UCD.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.CrossRerefences">
            <summary>Gets a collection of cross references associated with the code point.</summary>
            <remarks>The cross references have been extracted from Unicode data but are not normative.</remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.UnicodeRadicalStrokeCounts">
            <summary>Gets the radical and stroke count for the code point.</summary>
            <remarks>
            This is the Unicode_Radical_Stroke Unicode property, defined as kRSUnicode in Unihan data.
            This property is only ever useful when the character is a CJK ideograph.
            </remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.Definition">
            <summary>Gets the definition of the character from the Unihan data.</summary>
            <remarks>
            This is the kDefinition Unicode property.
            This property is only ever useful when the character is a CJK ideograph.
            </remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.MandarinReading">
            <summary>Gets the Mandarin reading of the character from the Unihan data.</summary>
            <remarks>
            This is the kMandarin Unicode property.
            This property is only ever useful when the character is a CJK ideograph.
            </remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.CantoneseReading">
            <summary>Gets the Cantonese reading of the character from the Unihan data.</summary>
            <remarks>
            This is the kCantonese Unicode property.
            This property is only ever useful when the character is a CJK ideograph.
            </remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.JapaneseKunReading">
            <summary>Gets the Japanese Kun reading of the character from the Unihan data.</summary>
            <remarks>
            This is the kJapaneseKun Unicode property.
            This property is only ever useful when the character is a CJK ideograph.
            </remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.JapaneseOnReading">
            <summary>Gets the Japanese On reading of the character from the Unihan data.</summary>
            <remarks>
            This is the kJapaneseOn Unicode property.
            This property is only ever useful when the character is a CJK ideograph.
            </remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.KoreanReading">
            <summary>Gets the Korean reading of the character from the Unihan data.</summary>
            <remarks>
            This is the kKorean Unicode property.
            This property is only ever useful when the character is a CJK ideograph.
            </remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.HangulReading">
            <summary>Gets the Hangul reading of the character from the Unihan data.</summary>
            <remarks>
            This is the kHangul Unicode property.
            This property is only ever useful when the character is a CJK ideograph.
            </remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.VietnameseReading">
            <summary>Gets the Vietnamese reading of the character from the Unihan data.</summary>
            <remarks>
            This is the kVietnamese Unicode property.
            This property is only ever useful when the character is a CJK ideograph.
            </remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.SimplifiedVariant">
            <summary>Gets the simplified variant of the character from the Unihan data.</summary>
            <remarks>
            This is the kSimplifiedVariant Unicode property.
            This property is only ever useful when the character is a CJK ideograph.
            </remarks>
        </member>
        <member name="P:System.Unicode.UnicodeCharInfo.TraditionalVariant">
            <summary>Gets the traditional variant of the character from the Unihan data.</summary>
            <remarks>
            This is the kTraditionalVariant Unicode property.
            This property is only ever useful when the character is a CJK ideograph.
            </remarks>
        </member>
        <member name="T:System.Unicode.UnicodeCodePointRange">
            <summary>Represents a range of Unicode code points.</summary>
        </member>
        <member name="T:System.Unicode.UnicodeCodePointRange.Enumerator">
            <summary>Represents an enumerator which enumerated through all the code points in the <see cref="T:System.Unicode.UnicodeCodePointRange"/>.</summary>
        </member>
        <member name="M:System.Unicode.UnicodeCodePointRange.Enumerator.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Unicode.UnicodeCodePointRange.Enumerator"/> struct.</summary>
            <param name="start">The start of the range.</param>
            <param name="end">The end of the range.</param>
        </member>
        <member name="M:System.Unicode.UnicodeCodePointRange.Enumerator.Dispose">
            <summary>Does nothing.</summary>
        </member>
        <member name="P:System.Unicode.UnicodeCodePointRange.Enumerator.Current">
            <summary>Gets the element in the collection at the current position of the enumerator..</summary>
            <value>The element in the collection at the current position of the enumerator.</value>
        </member>
        <member name="M:System.Unicode.UnicodeCodePointRange.Enumerator.MoveNext">
            <summary>Advances the enumerator to the next element of the collection.</summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="F:System.Unicode.UnicodeCodePointRange.FirstCodePoint">
            <summary>The first code point in the range.</summary>
        </member>
        <member name="F:System.Unicode.UnicodeCodePointRange.LastCodePoint">
            <summary>The last code point in the range.</summary>
        </member>
        <member name="P:System.Unicode.UnicodeCodePointRange.IsSingleCodePoint">
            <summary>Gets a value indicating whether this value represents a single code point.</summary>
            <value><see langword="true" /> if this value represents a single code point; otherwise, <see langword="false" />.</value>
        </member>
        <member name="M:System.Unicode.UnicodeCodePointRange.#ctor(System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Unicode.UnicodeCodePointRange"/> struct for a single code point.</summary>
            <param name="codePoint">The code point.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:System.Unicode.UnicodeCodePointRange.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Unicode.UnicodeCodePointRange"/> struct with specified bounds.</summary>
            <param name="firstCodePoint">The first code point in the range.</param>
            <param name="lastCodePoint">The last code point in the range.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="firstCodePoint"/> is less than 0 or greated than 0x10FFFF,
            or <paramref name="lastCodePoint"/> is less than <paramref name="firstCodePoint"/> or greated than 0x10FFFF.
            </exception>
        </member>
        <member name="M:System.Unicode.UnicodeCodePointRange.Contains(System.Int32)">
            <summary>Determines whether the range contains the specific code point.</summary>
            <remarks>This method does not validate its inputs, but will always return <see langword="false"/> for any invalid code point.</remarks>
            <param name="i">The integer to check against the range.</param>
            <returns><see langword="true"/> if the range contains the specified code point; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeCodePointRange.ToString">
            <summary>Returns a <see cref="T:System.String" /> that represents this instance.</summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeCodePointRange.Parse(System.String)">
            <summary>Parses the specified into a <see cref="T:System.Unicode.UnicodeCodePointRange"/>.</summary>
            <remarks>Code point ranges are encoded as one unprefixed hexadecimal number for single code points, or a pair of unprefixed hexadecimal numbers separated by the characters "..".</remarks>
            <param name="s">The text to parse.</param>
            <returns>The parsed <see cref="T:System.Unicode.UnicodeCodePointRange"/> value.</returns>
            <exception cref="T:System.FormatException">The parameter <paramref name="s"/> was not in an allowed format.</exception>
        </member>
        <member name="M:System.Unicode.UnicodeCodePointRange.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>A <see cref="T:System.Unicode.UnicodeCodePointRange.Enumerator"/> that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:System.Unicode.UnicodeCrossReferenceCollection">
            <summary>Represents a collection of code point cross-references.</summary>
        </member>
        <member name="T:System.Unicode.UnicodeCrossReferenceCollection.Enumerator">
            <summary>Represents an enumerator for the <see cref="T:System.Unicode.UnicodeCrossReferenceCollection"/> class.</summary>
        </member>
        <member name="M:System.Unicode.UnicodeCrossReferenceCollection.Enumerator.#ctor(System.Int32[])">
            <summary>Initializes a new instance of the <see cref="T:System.Unicode.UnicodeCrossReferenceCollection.Enumerator"/> struct.</summary>
            <param name="items">The items to enumerate.</param>
        </member>
        <member name="M:System.Unicode.UnicodeCrossReferenceCollection.Enumerator.Dispose">
            <summary>Does nothing.</summary>
        </member>
        <member name="P:System.Unicode.UnicodeCrossReferenceCollection.Enumerator.Current">
            <summary>Gets the element in the collection at the current position of the enumerator..</summary>
            <value>The element in the collection at the current position of the enumerator.</value>
        </member>
        <member name="M:System.Unicode.UnicodeCrossReferenceCollection.Enumerator.MoveNext">
            <summary>Advances the enumerator to the next element of the collection.</summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="F:System.Unicode.UnicodeCrossReferenceCollection.Empty">
            <summary>Gets an empty <see cref="T:System.Unicode.UnicodeCrossReferenceCollection"/> struct.</summary>
        </member>
        <member name="P:System.Unicode.UnicodeCrossReferenceCollection.Item(System.Int32)">
            <summary>Gets the cross-referenced code point at the specified index.</summary>
            <value>The cross-referenced code point.</value>
            <param name="index">The index.</param>
            <returns>The cross-referenced code point at the specified index.</returns>
        </member>
        <member name="P:System.Unicode.UnicodeCrossReferenceCollection.Count">
            <summary>Gets the number of elements contained in the <see cref="T:System.Unicode.UnicodeCrossReferenceCollection"/>.</summary>
            <value>The number of elements contained in the <see cref="T:System.Unicode.UnicodeCrossReferenceCollection"/>.</value>
        </member>
        <member name="M:System.Unicode.UnicodeCrossReferenceCollection.IndexOf(System.Int32)">
            <summary>Determines the index of a specific item in the <see cref="T:System.Unicode.UnicodeCrossReferenceCollection"/>.</summary>
            <param name="item">The object to locate in the <see cref="T:System.Unicode.UnicodeCrossReferenceCollection"/>.</param>
            <returns>The index of the item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeCrossReferenceCollection.Contains(System.Int32)">
            <summary>Determines whether the <see cref="T:System.Unicode.UnicodeCrossReferenceCollection"/> contains a specific value.</summary>
            <param name="item">The object to locate in the <see cref="T:System.Unicode.UnicodeCrossReferenceCollection"/>.</param>
            <returns><see langword="true" /> if item is fount in the <see cref="T:System.Unicode.UnicodeCrossReferenceCollection"/>; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeCrossReferenceCollection.CopyTo(System.Int32[],System.Int32)">
            <summary>
            Copies the elements of the UnicodeCrossReferenceCollection to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements to copy from UnicodeCrossReferenceCollection. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zeo-based index in array at which copy begins.</param>
        </member>
        <member name="M:System.Unicode.UnicodeCrossReferenceCollection.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>A <see cref="T:System.Unicode.UnicodeCrossReferenceCollection.Enumerator"/> that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:System.Unicode.UnicodeInfo">
            <summary>Provides access to unicode information.</summary>
        </member>
        <member name="F:System.Unicode.UnicodeInfo.DefaultBlock">
            <summary>The block name returned when no block is assigned to a specific code point.</summary>
        </member>
        <member name="P:System.Unicode.UnicodeInfo.UnicodeVersion">
            <summary>Gets the version of the Unicode standard supported by the class.</summary>
        </member>
        <member name="M:System.Unicode.UnicodeInfo.GetBlockName(System.Int32)">
            <summary>Gets the name of the Unicode block containing the character.</summary>
            <remarks>If the character has not been assigned to a block, the value of <see cref="F:System.Unicode.UnicodeInfo.DefaultBlock"/> will be returned.</remarks>
            <param name="codePoint">The Unicode code point whose block should be retrieved.</param>
            <returns>The name of the block the code point was assigned to.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeInfo.GetCharInfo(System.Int32)">
            <summary>Gets Unicode information on the specified code point.</summary>
            <remarks>
            This method will consolidate the data from a few different sources.
            There are more efficient way of retrieving the data for some properties if only one of those is needed at a time:
            <list type="bullet">
            <listheader>
            <term>Property</term>
            <description>Method</description>
            </listheader>
            <item>
            <term>Name</term>
            <description><see cref="M:System.Unicode.UnicodeInfo.GetName(System.Int32)"/></description>
            </item>
            <item>
            <term>Category</term>
            <description><see cref="M:System.Unicode.UnicodeInfo.GetCategory(System.Int32)"/></description>
            </item>
            <item>
            <term>Block</term>
            <description><see cref="M:System.Unicode.UnicodeInfo.GetBlockName(System.Int32)"/></description>
            </item>
            </list>
            </remarks>
            <param name="codePoint">The Unicode code point for which the data must be retrieved.</param>
            <returns>The name of the code point, if defined; <see langword="null"/> otherwise.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeInfo.GetCategory(System.Int32)">
            <summary>Gets the category of the specified code point.</summary>
            <remarks>
            The name referred to is the unicode General_Category property.
            If you only need the category of a character, calling this method is faster than calling <see cref="M:System.Unicode.UnicodeInfo.GetCharInfo(System.Int32)"/> and retrieving <see cref="P:System.Unicode.UnicodeCharInfo.Category"/>, because there is less information to lookup.
            </remarks>
            <param name="codePoint">The Unicode code point for which the category must be retrieved.</param>
            <returns>The category of the code point.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeInfo.GetDisplayText(System.Unicode.UnicodeCharInfo)">
            <summary>Gets a display text for the specified code point.</summary>
            <param name="charInfo">The information for the code point.</param>
            <returns>A display text for the code point, which may be the representation of the code point itself.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeInfo.GetDisplayText(System.Int32)">
            <summary>Gets a display text for the specified code point.</summary>
            <param name="codePoint">The Unicode code point, for which a display text should be returned.</param>
            <returns>A display text for the code point, which may be the representation of the code point itself.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeInfo.GetName(System.Int32)">
            <summary>Gets the name of the specified code point.</summary>
            <remarks>
            The name referred to is the unicode Name property.
            If you only need the name of a character, calling this method is faster than calling <see cref="M:System.Unicode.UnicodeInfo.GetCharInfo(System.Int32)"/> and retrieving <see cref="P:System.Unicode.UnicodeCharInfo.Name"/>, because there is less information to lookup.
            </remarks>
            <param name="codePoint">The Unicode code point for which the name must be retrieved.</param>
            <returns>The name of the code point, if defined; <see langword="null"/> otherwise.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeInfo.GetCjkRadicalInfo(System.Int32)">
            <summary>Returns information for a CJK radical.</summary>
            <param name="radicalIndex">The index of the radical. Must be between 1 and <see cref="P:System.Unicode.UnicodeInfo.CjkRadicalCount"/>.</param>
            <returns>Information on the specified radical.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The <paramref name="radicalIndex"/> parameter is out of range.</exception>
        </member>
        <member name="P:System.Unicode.UnicodeInfo.CjkRadicalCount">
            <summary>Returns the number of CJK radicals in the Unicode data.</summary>
            <remarks>This value will be 214 for the foreseeable future.</remarks>
        </member>
        <member name="M:System.Unicode.UnicodeInfo.GetBlocks">
            <summary>Gets all the blocks defined in the Unicode data.</summary>
            <remarks><see cref="F:System.Unicode.UnicodeInfo.DefaultBlock"/> is not the name of a block, but only a value indicating the abscence of block information for a given code point.</remarks>
            <returns>An array containing an entry for every block defined in the Unicode data.</returns>
        </member>
        <member name="T:System.Unicode.UnicodeNameAlias">
            <summary>Represents a name alias for an Unicode code point.</summary>
        </member>
        <member name="P:System.Unicode.UnicodeNameAlias.Name">
            <summary>Gets the alias name.</summary>
            <value>The name.</value>
        </member>
        <member name="P:System.Unicode.UnicodeNameAlias.Kind">
            <summary>Gets the kind of alias.</summary>
            <value>The kind of alias.</value>
        </member>
        <member name="T:System.Unicode.UnicodeNameAliasCollection">
            <summary>Represents a collection of name aliases.</summary>
        </member>
        <member name="T:System.Unicode.UnicodeNameAliasCollection.Enumerator">
            <summary>Represents an enumerator for the <see cref="T:System.Unicode.UnicodeNameAliasCollection"/> class.</summary>
        </member>
        <member name="M:System.Unicode.UnicodeNameAliasCollection.Enumerator.#ctor(System.Unicode.UnicodeNameAlias[])">
            <summary>Initializes a new instance of the <see cref="T:System.Unicode.UnicodeNameAliasCollection.Enumerator"/> struct.</summary>
            <param name="items">The items to enumerate.</param>
        </member>
        <member name="M:System.Unicode.UnicodeNameAliasCollection.Enumerator.Dispose">
            <summary>Does nothing.</summary>
        </member>
        <member name="P:System.Unicode.UnicodeNameAliasCollection.Enumerator.Current">
            <summary>Gets the element in the collection at the current position of the enumerator..</summary>
            <value>The element in the collection at the current position of the enumerator.</value>
        </member>
        <member name="M:System.Unicode.UnicodeNameAliasCollection.Enumerator.MoveNext">
            <summary>Advances the enumerator to the next element of the collection.</summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="F:System.Unicode.UnicodeNameAliasCollection.Empty">
            <summary>Gets an empty <see cref="T:System.Unicode.UnicodeNameAliasCollection"/> struct.</summary>
        </member>
        <member name="P:System.Unicode.UnicodeNameAliasCollection.Item(System.Int32)">
            <summary>Gets the <see cref="T:System.Unicode.UnicodeNameAlias"/> at the specified index.</summary>
            <value>The <see cref="T:System.Unicode.UnicodeNameAlias"/>.</value>
            <param name="index">The index.</param>
            <returns>The <see cref="T:System.Unicode.UnicodeNameAlias"/> at the specified index.</returns>
        </member>
        <member name="P:System.Unicode.UnicodeNameAliasCollection.Count">
            <summary>Gets the number of elements contained in the <see cref="T:System.Unicode.UnicodeNameAliasCollection"/>.</summary>
            <value>The number of elements contained in the <see cref="T:System.Unicode.UnicodeNameAliasCollection"/>.</value>
        </member>
        <member name="M:System.Unicode.UnicodeNameAliasCollection.IndexOf(System.Unicode.UnicodeNameAlias)">
            <summary>Determines the index of a specific item in the <see cref="T:System.Unicode.UnicodeNameAliasCollection"/>.</summary>
            <param name="item">The object to locate in the <see cref="T:System.Unicode.UnicodeNameAliasCollection"/>.</param>
            <returns>The index of the item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeNameAliasCollection.Contains(System.Unicode.UnicodeNameAlias)">
            <summary>Determines whether the <see cref="T:System.Unicode.UnicodeNameAliasCollection"/> contains a specific value.</summary>
            <param name="item">The object to locate in the <see cref="T:System.Unicode.UnicodeNameAliasCollection"/>.</param>
            <returns><see langword="true" /> if item is fount in the <see cref="T:System.Unicode.UnicodeNameAliasCollection"/>; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeNameAliasCollection.CopyTo(System.Unicode.UnicodeNameAlias[],System.Int32)">
            <summary>
            Copies the elements of the UnicodeNameAliasCollection to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements to copy from UnicodeNameAliasCollection. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zeo-based index in array at which copy begins.</param>
        </member>
        <member name="M:System.Unicode.UnicodeNameAliasCollection.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An <see cref="T:System.Unicode.UnicodeNameAliasCollection.Enumerator"/> that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:System.Unicode.UnicodeNameAliasKind">
            <summary>Provides information on the kind of name alias provided for a code point.</summary>
        </member>
        <member name="F:System.Unicode.UnicodeNameAliasKind.Correction">
            <summary>The alias is a correction of a serious problem in the original name.</summary>
        </member>
        <member name="F:System.Unicode.UnicodeNameAliasKind.Control">
            <summary>The alias provides the ISO 6429 name for C0 and C1 control functions of a control code, or another commonly occurring name for the control code.</summary>
        </member>
        <member name="F:System.Unicode.UnicodeNameAliasKind.Alternate">
            <summary>The alias is a widely used alternate name for a format character.</summary>
        </member>
        <member name="F:System.Unicode.UnicodeNameAliasKind.Figment">
            <summary>The alias is a documented non-standardized label for C1 control code points.</summary>
        </member>
        <member name="F:System.Unicode.UnicodeNameAliasKind.Abbreviation">
            <summary>The alias is a commonly occurring abbreviation (or acronym) for control codes, format characters, spaces, and variation selectors.</summary>
        </member>
        <member name="T:System.Unicode.UnicodeNumericType">
            <summary>Represents the value of the Numeric_Type property.</summary>
        </member>
        <member name="F:System.Unicode.UnicodeNumericType.None">
            <summary>The code point has no numeric value.</summary>
        </member>
        <member name="F:System.Unicode.UnicodeNumericType.Decimal">
            <summary>The code point represents a decimal digit which is part of a contiguous ascending range of characters from 0 to 9, and can be used in a decimal radix positional numeral system.</summary>
        </member>
        <member name="F:System.Unicode.UnicodeNumericType.Digit">
            <summary>The code point represents a digit between 0 and 9 and requires special handling.</summary>
        </member>
        <member name="F:System.Unicode.UnicodeNumericType.Numeric">
            <summary>The code point represents another kind of numeric value.</summary>
        </member>
        <member name="T:System.Unicode.UnicodeRadicalStrokeCount">
            <summary>Provides information on radical and additional stroke count for a code point.</summary>
            <remarks>Values of this type are usually associated with the property kRSUnicode (aka. Unicode_Radical_Stroke).</remarks>
        </member>
        <member name="M:System.Unicode.UnicodeRadicalStrokeCount.#ctor(System.Byte,System.Byte)">
            <summary>Initializes a new instance of the class <see cref="T:System.Unicode.UnicodeRadicalStrokeCount"/> from raw data.</summary>
            <param name="rawRadical">The raw value to use for <see cref="P:System.Unicode.UnicodeRadicalStrokeCount.Radical"/>.</param>
            <param name="rawStrokeCount">The raw value to use for <see cref="P:System.Unicode.UnicodeRadicalStrokeCount.RawStrokeCount"/>.</param>
        </member>
        <member name="M:System.Unicode.UnicodeRadicalStrokeCount.#ctor(System.Byte,System.SByte,System.Boolean)">
            <summary>Initializes a new instance of the class <see cref="T:System.Unicode.UnicodeRadicalStrokeCount"/>.</summary>
            <remarks><paramref name="strokeCount"/> must be between -64 and 63 included.</remarks>
            <param name="radical">The index of the Kangxi radical of the character.</param>
            <param name="strokeCount">The number of additional strokes required to form the character from the radical.</param>
            <param name="isSimplified">Indicates whether the character is simplified.</param>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="strokeCount"/> is outside of the allowed range of -8 to 119 inclusive.</exception>
        </member>
        <member name="P:System.Unicode.UnicodeRadicalStrokeCount.Radical">
            <summary>Gets the index of the Kangxi radical of the character.</summary>
            <remarks>The Kangxi radicals are numbered from 1 to 214 inclusive.</remarks>
            <value>The index of the Kangxi radical.</value>
        </member>
        <member name="P:System.Unicode.UnicodeRadicalStrokeCount.RawStrokeCount">
            <summary>Gets the value of <see cref="P:System.Unicode.UnicodeRadicalStrokeCount.StrokeCount"/> packed with <see cref="P:System.Unicode.UnicodeRadicalStrokeCount.IsSimplified"/>.</summary>
            <remarks>
            The stroke count is stored as a 7bit value, together with the <see cref="P:System.Unicode.UnicodeRadicalStrokeCount.IsSimplified"/> flag as a 1bit value.
            Raw values between 120 and 127 represent negative stroke counts -8 to -1.
            </remarks>
            <value>The raw value of <see cref="P:System.Unicode.UnicodeRadicalStrokeCount.StrokeCount"/>.</value>
        </member>
        <member name="P:System.Unicode.UnicodeRadicalStrokeCount.StrokeCount">
            <summary>Gets the additional stroke count.</summary>
            <value>The additional stroke count.</value>
        </member>
        <member name="P:System.Unicode.UnicodeRadicalStrokeCount.IsSimplified">
            <summary>Gets a value indicating whether the information is based on the simplified form of the radical.</summary>
            <value><see langword="true" /> if the information is based on the simplified form of the radical; otherwise, <see langword="false" />.</value>
        </member>
        <member name="T:System.Unicode.UnicodeRadicalStrokeCountCollection">
            <summary>Represents a collection of values for the kRSUnicode (aka. Unicode_Radical_Stroke) property.</summary>
        </member>
        <member name="T:System.Unicode.UnicodeRadicalStrokeCountCollection.Enumerator">
            <summary>Represents an enumerator for the <see cref="T:System.Unicode.UnicodeRadicalStrokeCountCollection"/> class.</summary>
        </member>
        <member name="M:System.Unicode.UnicodeRadicalStrokeCountCollection.Enumerator.#ctor(System.Unicode.UnicodeRadicalStrokeCount[])">
            <summary>Initializes a new instance of the <see cref="T:System.Unicode.UnicodeRadicalStrokeCountCollection.Enumerator"/> struct.</summary>
            <param name="items">The items to enumerate.</param>
        </member>
        <member name="M:System.Unicode.UnicodeRadicalStrokeCountCollection.Enumerator.Dispose">
            <summary>Does nothing.</summary>
        </member>
        <member name="P:System.Unicode.UnicodeRadicalStrokeCountCollection.Enumerator.Current">
            <summary>Gets the element in the collection at the current position of the enumerator..</summary>
            <value>The element in the collection at the current position of the enumerator.</value>
        </member>
        <member name="M:System.Unicode.UnicodeRadicalStrokeCountCollection.Enumerator.MoveNext">
            <summary>Advances the enumerator to the next element of the collection.</summary>
            <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
        </member>
        <member name="F:System.Unicode.UnicodeRadicalStrokeCountCollection.Empty">
            <summary>Gets an empty <see cref="T:System.Unicode.UnicodeRadicalStrokeCountCollection"/> struct.</summary>
        </member>
        <member name="P:System.Unicode.UnicodeRadicalStrokeCountCollection.Item(System.Int32)">
            <summary>Gets the <see cref="T:System.Unicode.UnicodeRadicalStrokeCount"/> at the specified index.</summary>
            <value>The <see cref="T:System.Unicode.UnicodeRadicalStrokeCount"/>.</value>
            <param name="index">The index.</param>
            <returns>The <see cref="T:System.Unicode.UnicodeRadicalStrokeCount"/> at the specified index.</returns>
        </member>
        <member name="P:System.Unicode.UnicodeRadicalStrokeCountCollection.Count">
            <summary>Gets the number of elements contained in the <see cref="T:System.Unicode.UnicodeRadicalStrokeCountCollection"/>.</summary>
            <value>The number of elements contained in the <see cref="T:System.Unicode.UnicodeRadicalStrokeCountCollection"/>.</value>
        </member>
        <member name="M:System.Unicode.UnicodeRadicalStrokeCountCollection.IndexOf(System.Unicode.UnicodeRadicalStrokeCount)">
            <summary>Determines the index of a specific item in the <see cref="T:System.Unicode.UnicodeRadicalStrokeCountCollection"/>.</summary>
            <param name="item">The object to locate in the <see cref="T:System.Unicode.UnicodeRadicalStrokeCountCollection"/>.</param>
            <returns>The index of the item if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeRadicalStrokeCountCollection.Contains(System.Unicode.UnicodeRadicalStrokeCount)">
            <summary>Determines whether the <see cref="T:System.Unicode.UnicodeRadicalStrokeCountCollection"/> contains a specific value.</summary>
            <param name="item">The object to locate in the <see cref="T:System.Unicode.UnicodeRadicalStrokeCountCollection"/>.</param>
            <returns><see langword="true" /> if item is fount in the <see cref="T:System.Unicode.UnicodeRadicalStrokeCountCollection"/>; <see langword="false" /> otherwise.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeRadicalStrokeCountCollection.CopyTo(System.Unicode.UnicodeRadicalStrokeCount[],System.Int32)">
            <summary>Copies the elements of the UnicodeRadicalStrokeCountCollection to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</summary>
            <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements to copy from UnicodeRadicalStrokeCountCollection. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
            <param name="arrayIndex">The zeo-based index in array at which copy begins.</param>
        </member>
        <member name="M:System.Unicode.UnicodeRadicalStrokeCountCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Unicode.UnicodeRadicalStrokeCountCollection.Enumerator"/> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:System.Unicode.UnicodeRationalNumber">
            <summary>Represents a rational number in a format compatible with the Unicode standard.</summary>
        </member>
        <member name="M:System.Unicode.UnicodeRationalNumber.Parse(System.String)">
            <summary>Parses a rational number from a string representation.</summary>
            <remarks>
            Valid text representations should match the regex pattern /-?[0-9]+(?:\/[0-9]+)/.
            The numerator part should fit in a <see cref="T:System.Int64"/>, and the denominator part should fit in a <see cref="T:System.Byte"/>.
            </remarks>
            <param name="s">The string to parse.</param>
            <returns>The rational number parsed from the string.</returns>
            <exception cref="T:System.ArgumentNullException">The parameter <paramref name="s"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentException">The parameter <paramref name="s"/> is empty.</exception>
        </member>
        <member name="F:System.Unicode.UnicodeRationalNumber.Numerator">
            <summary>The numerator of the fraction.</summary>
        </member>
        <member name="F:System.Unicode.UnicodeRationalNumber.Denominator">
            <summary>The denominator of the fraction.</summary>
        </member>
        <member name="M:System.Unicode.UnicodeRationalNumber.#ctor(System.Int64)">
            <summary>Initializes a new instance of the <see cref="T:System.Unicode.UnicodeRationalNumber"/> structure that represents a signed integer..</summary>
            <param name="number">The number which should be represented as a rational number.</param>
        </member>
        <member name="M:System.Unicode.UnicodeRationalNumber.#ctor(System.Int64,System.UInt16)">
            <summary>Initializes a new instance of the <see cref="T:System.Unicode.UnicodeRationalNumber"/> structure that represents a signed integer..</summary>
            <param name="numerator">The number which should be used as numerator in the rational number.</param>
            <param name="denominator">The number which should be used as denominator in the rational number.</param>
        </member>
        <member name="P:System.Unicode.UnicodeRationalNumber.IsDefaultValue">
            <summary>Gets a value indicating whether the current value is the default value of the type.</summary>
            <remarks>The default value is an invalid fraction of 0/0.</remarks>
        </member>
        <member name="M:System.Unicode.UnicodeRationalNumber.ToString">
            <summary>Creates a string representation of the current rational number.</summary>
            <returns>The created representation is culture invariant, and will be parsable by the <see cref="M:System.Unicode.UnicodeRationalNumber.Parse(System.String)"/> method.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeRationalNumber.Equals(System.Unicode.UnicodeRationalNumber)">
            <summary>Determines whether the specified rational number is equal to the current value.</summary>
            <param name="other">The other value to compare to the current one.</param>
            <returns><see langword="true"/> if the two values are the same; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeRationalNumber.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current rational number.</summary>
            <param name="obj">The object to compare to the current rational number.</param>
            <returns><see langword="true"/> if the object represents the same rational number; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:System.Unicode.UnicodeRationalNumber.GetHashCode">
            <summary>Returns the hash code for the current rational number.</summary>
            <returns>A 32-bit signed integer hash code.</returns>
        </member>
        <member name="T:System.Unicode.UnihanNumericType">
            <summary>Represents the different numeric types from the Unihan database.</summary>
        </member>
        <member name="F:System.Unicode.UnihanNumericType.None">
            <summary>Indicates that there is no Unihan numeric property defined for the code point.</summary>
        </member>
        <member name="F:System.Unicode.UnihanNumericType.Primary">
            <summary>Indicates that the propery kPrimaryNumeric is defined for this code point.</summary>
            <remarks>The kPrimaryNumeric property is used for ideographs wich are standard numerals.</remarks>
        </member>
        <member name="F:System.Unicode.UnihanNumericType.Accounting">
            <summary>Indicates that the propery kAccountingNumeric is defined for this code point.</summary>
            <remarks>The kAccountingNumeric property is used for ideographs used as accounting numerals.</remarks>
        </member>
        <member name="F:System.Unicode.UnihanNumericType.Other">
            <summary>Indicates that the propery kOtherNumeric is defined for this code point.</summary>
            <remarks>The kOtherNumeric property is used for ideographs wich are used as numerals in non common contexts.</remarks>
        </member>
        <member name="T:System.Unicode.ValueNameAttribute">
            <summary>Declares a name for a specific value.</summary>
            <remarks>
            Since this project tries to stick to the .NET Framework naming conventions, this attribute may be used to indicate standard property names and values names where applicable.
            It may also be of use when aliases are available for a given property or value.
            </remarks>
        </member>
        <member name="P:System.Unicode.ValueNameAttribute.Name">
            <summary>The name given to the property or value.</summary>
        </member>
        <member name="M:System.Unicode.ValueNameAttribute.#ctor(System.String)">
            <summary>Initializes an instance of the class <see cref="T:System.Unicode.ValueNameAttribute"/>.</summary>
            <param name="name">The name given to the property or value on which this attribute is to be applied.</param>
        </member>
    </members>
</doc>
